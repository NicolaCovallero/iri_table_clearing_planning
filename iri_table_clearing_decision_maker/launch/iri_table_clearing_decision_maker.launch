<launch>

  <arg name="RQT" default="false"/>
  <arg name="EXECUTION" default="True"/>
  <arg name="REPEAT" default="False"/>
  <!--<arg name="input_topic" default="/estirabot/kinect/depth_registered/points"/>--><!-- For gazebo -->
  <!--<arg name="input_topic" default="/estirabot/camera/depth_registered/points"/>--><!-- For real robot -->
  <arg name="CAMERA" default="kinect"/><!-- Kinect for the simulation, "camera" for the real robot  -->
  <arg name="INPUT_TOPIC" default="/estirabot/$(arg CAMERA)/depth_registered/points"/>--><!-- For real robot -->
  <arg name="ROBOT" default="estirabot"/>
  <arg name="SAVE_EXPERIMENT" default="False"/>
  <arg name="FILTERING" default="True"/>
  <arg name="AUTOMATIC_SAVE" default="True"/>
  <arg name="USE_ACTION_COST" default="True"/>
  <arg name="EXPERIMENT_COMPARISON" default="False"/>

  

  <!-- services -->
  <include file="$(find iri_table_clearing_decision_maker)/launch/tos_supervoxels_server.launch">
    <arg name="screen" value="True"/>
  </include>

  <!-- Launch the main node to control the process -->
  <group ns="$(arg ROBOT)">
    <node pkg="iri_table_clearing_decision_maker" type="iri_table_clearing_decision_maker"
         name="iri_table_clearing_decision_maker" output="screen">

        <param name="input_topic" value="$(arg INPUT_TOPIC)"/>

        
        <!-- Passing as input the name of the services (It was better doing with a remap) -->
        <param name="execute_pushing_service" value="/$(arg ROBOT)/iri_table_clearing_execute/execute_pushing"/>
        <param name="execute_grasping_service" value="/$(arg ROBOT)/iri_table_clearing_execute/execute_grasping"/>
        <param name="predicates_service" value="/$(arg ROBOT)/table_clearing_predicates_alg_node/get_symbolic_predicates"/>


        <param name="execution" value="$(arg EXECUTION)"/>
        <param name="repeat" value="$(arg REPEAT)"/>
        <param name="pushing_discretization" value="3"/> <!-- Minimum 2 -->
        <param name="pushing_step" value="1"/> <!-- length to push accordingly to the length of the object -->
        
        <!-- Dropping pose definition - Orientation Downforawrd -->
        <param name="dropping_pose_x" value="0.2"/>
        <param name="dropping_pose_y" value="0.9"/>
        <param name="dropping_pose_z" value="0.1"/>

        <!-- pre Dropping pose definition - Orientation Downforawrd -->
        <param name="pre_dropping_pose_x" value="0.2"/>
        <param name="pre_dropping_pose_y" value="0.9"/>
        <param name="pre_dropping_pose_z" value="0.3"/>

        <param name="use_action_cost" value="$(arg USE_ACTION_COST)"/>
        <param name="experiment_comparison" value="$(arg EXPERIMENT_COMPARISON)"/>

        <!-- Filter the input point cloud -->
        <param name="filtering" value="$(arg FILTERING)"/>

        <!-- experiment -->
        <param name="save_experiment" value="$(arg SAVE_EXPERIMENT)"/>
        <param name="working_folder" value="/home/ncovallero/iri-lab/iri_ws/src/iri_table_clearing_planning/iri_table_clearing_decision_maker/experiments_data"/>
        <param name="automatic_save" value="$(arg AUTOMATIC_SAVE)"/>
                                 
    </node>
  </group>
  <!-- Launch Rqt_gui with the correct configuration -->
  <include file="$(find iri_table_clearing_config)/launch/rqt_gui.launch">
    <arg name="rqt" value="$(arg RQT)"/>
  </include>

</launch>
