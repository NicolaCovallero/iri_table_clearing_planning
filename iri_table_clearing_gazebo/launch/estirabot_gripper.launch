<launch>

  <arg name="ROBOT"   default="estirabot" />
  <arg name="IK"      default="True" />
  <arg name="KINECT"  default="False" />
  <arg name="BHAND"   default="False" />
  <arg name="GRIPPER" default="True" />
  <arg name="NO_TOOL" default="False" />

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="world" default="test2"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="headless" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find iri_table_clearing_gazebo)/worlds/$(arg world).world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
         command="$(find xacro)/xacro.py '$(find iri_table_clearing_description)/xacro/estirabot.urdf.xacro'" />


  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model estirabot -param robot_description"/>

  <!-- ros_control estirabot launch file -->
  <include file="$(find estirabot_gazebo)/launch/estirabot_control.launch" />

  <!-- Publish TCP Robot Inverse Kinematics -->
  <include file="$(find iri_table_clearing_gazebo)/launch/ik_gripper.launch" if="$(arg IK)">
      <arg name="ROBOT" value="$(arg ROBOT)" />
  </include>


  <!-- publish gripper_tcp tf -->
  <node name="gripper_tcp_tf" pkg="tf" type="static_transform_publisher"
        args="0 0 0.115 0 0 0 1 /$(arg ROBOT)_link_tcp /$(arg ROBOT)_link_gripper_tcp 100" />

   <node name="fake_joints_move" pkg="iri_table_clearing_gazebo" type="fake_services.py" output="screen">
    <param name="robot" type="str" value="$(arg ROBOT)" />
  </node>

   <node name="delete_model_service" pkg="iri_table_clearing_gazebo" type="delete_model_service.py" output="screen"/>
  

</launch>
